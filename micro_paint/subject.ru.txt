Имя назначения : micro_paint
Ожидаемые файлы : *.c *.h
Разрешенные функции: fopen, fread, fscanf, fclose, write, malloc, calloc, realloc, free, memset, powf, sqrtf
--------------------------------------------------------------------------------------

Напишите программу, которая будет считывать "операционный файл" и печатать результат в терминале

Ваша программа должна принимать один аргумент, это будет путь к "операционному файлу".
Если вашей программе задано 0 или более 1 аргумента, напишите "Ошибка: аргумент", за которым следует \n в STDOUT

$> ./micro_paint | cat -e
Ошибка: аргумент$
$> ./micro_paint не бойтесь математики | cat -e
Ошибка: аргумент$
$>

Если при открытии и/или чтении "операционного файла" возникает какая-либо проблема, напишите "Ошибка: операционный файл поврежден", за которым следует \n в STDOUT

"Файл операций" будет содержать строки с одной операцией на строку
Если строка неверна, возникает ошибка.
Если произошла ошибка, ваша программа должна вернуть 1
Если ошибка не произошла, она должна возвращать 0
Последняя строка может быть с символом \n или без него
Строки должны быть прочитаны по порядку, и поэтому операции должны выполняться в том же порядке
Между каждой переменной в строке должен быть хотя бы один пробел

ШИРИНА ВЫСОТА BACKGROUND_CHAR
Эта строка всегда является первой строкой файла и определяет зону, в которой нужно рисовать. Ваша программа не должна отображать ничего за пределами зоны рисования. Он должен быть там только один раз.
- WIDTH: должно быть значение int с 0 < WIDTH <= 300, горизонтальное количество символов, используемых для зоны рисования
- ВЫСОТА: должно быть значение int с 0 < HEIGHT <= 300, количество символов по вертикали, которое будет использоваться для зоны рисования
- BACKGROUND_CHAR: любое пустое пространство будет заполнено BACKGROUND_CHAR

r X Y ШИРИНА ВЫСОТА СИМВОЛ
Эта операция нарисует пустой прямоугольник, в котором будет нарисована только граница прямоугольника
- r: символ r
- X: любая точка с плавающей точкой, горизонтальное положение верхнего левого угла прямоугольника
- Y: любое значение с плавающей точкой, вертикальное положение верхнего левого угла прямоугольника
- ШИРИНА: положительное значение с плавающей точкой, но не 0, ширина прямоугольника (по горизонтали)
- ВЫСОТА: положительное значение с плавающей точкой, но не 0, высота прямоугольника (по вертикали)
- СИМВОЛ: символ, используемый для рисования прямоугольника

R X Y ШИРИНА ВЫСОТА СИМВОЛ
Эта операция нарисует заполненный прямоугольник
- R: символ R
- X: любая точка с плавающей точкой, горизонтальное положение верхнего левого угла прямоугольника
- Y: любое значение с плавающей точкой, вертикальное положение верхнего левого угла прямоугольника
- ШИРИНА: положительное значение с плавающей точкой, но не 0, ширина прямоугольника (по горизонтали)
- ВЫСОТА: положительное значение с плавающей точкой, но не 0, высота прямоугольника (по вертикали)
- СИМВОЛ: символ, используемый для рисования прямоугольника

Зона рисования разделена на прямоугольники, которые могут содержать по одному символу каждый (поскольку мы находимся в терминале ...), мы будем называть их пикселями
Чтобы все было проще, мы будем использовать только верхний левый угол пикселя, чтобы узнать, находится ли этот пиксель в прямоугольнике или нет
Пиксель с верхним левым углом на расстоянии, большем или равном 1 от границы прямоугольника, не является частью пустого прямоугольника
Пиксель с верхним левым углом на расстоянии менее 1 от границы прямоугольника является частью пустого прямоугольника.

Вы должны смотреть на изображение, читая следующие несколько строк. Он представляет собой терминал. Мы установили зону рисования ШИРИНОЙ 5 и ВЫСОТОЙ 3.
Мы написали разные символы, чтобы помочь вам понять следующие объяснения.
- Если вы хотите нарисовать операцию: r 2.5 1.5 1 1 X (зеленый прямоугольник)
-- это означает, что символ "D" на изображении будет заменен на "X"

Вы должны найти our_micro_paint, чтобы помочь вам протестировать свой с помощью некоторого operation_file.example

Подсказка:
Если точка определена как (Xa, Ya)
И прямоугольник с верхним левым углом (Xtl, Ytl) и нижним правым углом (Xbr, Ybr)
Если Xtl <= Xa <= Xbr и Ytl <= Ya <= Ybr, то точка находится в прямоугольнике